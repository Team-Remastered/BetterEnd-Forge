buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
        classpath 'org.parchmentmc:librarian:1.+'
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'org.parchmentmc.librarian.forgegradle'

mixin {
    add sourceSets.main, "betterendforge.refmap.json"
}

repositories {
    // location of a maven mirror for JEI files, as a fallback
    maven {
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl/"
    }
    //Patchouli
    maven {
        url 'https://maven.blamejared.com'
    }

}

group = "mod.${author}.${modid}" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "${modid}"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

minecraft {

    mappings channel: 'parchment', version: "${mapping_version}"
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            // Needed to work with Patchouli in-dev
            properties 'mixin.env.disableRefMap': 'true'
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods { betterendforge { source sourceSets.main } }
        }

        server {
            // Needed to work with Patchouli in-dev
            properties 'mixin.env.disableRefMap': 'true'
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods { betterendforge { source sourceSets.main } }
        }

        data {
            // Needed to work with Patchouli in-dev
            properties 'mixin.env.disableRefMap': 'true'
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'betterendforge', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                betterendforge { source sourceSets.main } }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {

    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    compileOnly fg.deobf("mezz.jei:jei-1.18.2:9.4.1.113:api")
    runtimeOnly fg.deobf("mezz.jei:jei-1.18.2:9.4.1.113")

    compileOnly fg.deobf("vazkii.patchouli:Patchouli:1.18.2-71.1:api")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:1.18.2-71.1")

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

}

jar {
    manifest {
        attributes([
                "Specification-Title": "BetterEnd Forge",
                "Specification-Vendor": author,
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" : author,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "${modid}.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')
